{
  "name": "code-crawler",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/code-crawler/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nx/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "options": {
        "target": "node",
        "compiler": "tsc",
        "outputPath": "dist/apps/code-crawler",
        "main": "apps/code-crawler/src/main.ts",
        "tsConfig": "apps/code-crawler/tsconfig.app.json",
        "assets": [],
        "webpackConfig": "webpack-custom.config.js"
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false
        }
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "code-crawler:build"
      },
      "configurations": {
        "production": {
          "buildTarget": "code-crawler:build:production"
        }
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/code-crawler/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/apps/code-crawler"],
      "options": {
        "jestConfig": "apps/code-crawler/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "execute_with_TS-1": {
      "executor": "@nx/js:node",
      "options": {
        "args": ["-src", "./code_examples/typescript/test", "-lang", "ts"],
        "buildTarget": "code-crawler:build",
        "watch": false
      }
    },
    "execute_with_TS-2": {
      "executor": "@nx/js:node",
      "options": {
        "args": ["-src", "./code_examples/typescript/example-01", "-lang", "ts"],
        "buildTarget": "code-crawler:build",
        "watch": false
      }
    },
    "execute_with_golang1": {
      "executor": "@nx/js:node",
      "options": {
        "args": ["-src", "./code_examples/golang/example-1", "-lang", "go"],
        "buildTarget": "code-crawler:build",
        "watch": false
      }
    },
    "execute_with_golang2": {
      "executor": "@nx/js:node",
      "options": {
        "args": ["-src", "./code_examples/golang/example-2", "-lang", "go"],
        "buildTarget": "code-crawler:build",
        "watch": false
      }
    },
    "execute_with_golang_modules": {
      "executor": "@nx/js:node",
      "options": {
        "args": ["-src", "./code_examples/golang/module_examples", "-lang", "go"],
        "buildTarget": "code-crawler:build",
        "watch": false
      }
    },
    "execute_with_RDS": {
      "executor": "@nx/js:node",
      "options": {
        "args": ["-src", "./code_examples/golang/orm-tests/gorm", "-lang", "go"],
        "buildTarget": "code-crawler:build",
        "watch": false
      }
    },
    "execute_with_REST": {
      "executor": "@nx/js:node",
      "options": {
        "args": ["-src", "./code_examples/golang/rest-api-examples/gorilla-mux-small", "-lang", "go"],
        "buildTarget": "code-crawler:build",
        "watch": false
      }
    },
    "execute_with_MASTERMOST": {
      "executor": "@nx/js:node",
      "options": {
        "args": ["-src", "./repo_examples/72af5bcd-ad69-49c6-9694-96cb7d67eea5/mattermost-server/api4", "-lang", "go"],
        "buildTarget": "code-crawler:build",
        "watch": false
      }
    }
  },
  "tags": []
}
